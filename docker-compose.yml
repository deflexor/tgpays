version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: docker/php/Dockerfile
    volumes:
      - ./:/var/www/html
    depends_on:
      - redis
      - database
    environment:
      - APP_ENV=dev
      - APP_SECRET=your_app_secret_here
      - REDIS_URL=redis://redis:6379
      - MESSENGER_TRANSPORT_DSN=redis://redis:6379/messages
      - TELEGRAM_BOT_TOKEN=your_telegram_bot_token_here

  nginx:
    image: nginx:alpine
    ports:
      - "8080:80"
    volumes:
      - ./:/var/www/html
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - app

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  messenger-worker:
    build:
      context: .
      dockerfile: docker/php/Dockerfile
    depends_on:
      - app
      - redis
    volumes:
      - ./:/var/www/html
    command: ["php", "bin/console", "messenger:consume", "async", "--time-limit=3600"]
    environment:
      - APP_ENV=dev
      - APP_SECRET=your_app_secret_here
      - DATABASE_URL=mysql://app_user:app_password@database:3306/app_db
      - REDIS_URL=redis://redis:6379
      - MESSENGER_TRANSPORT_DSN=redis://redis:6379/messages
      - TELEGRAM_BOT_TOKEN=your_telegram_bot_token_here

###> doctrine/doctrine-bundle ###
  database:
    image: postgres:${POSTGRES_VERSION:-16}-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-app}
      # You should definitely change the password in production
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-!ChangeMe!}
      POSTGRES_USER: ${POSTGRES_USER:-app}
    healthcheck:
      test: ["CMD", "pg_isready", "-d", "${POSTGRES_DB:-app}", "-U", "${POSTGRES_USER:-app}"]
      timeout: 5s
      retries: 5
      start_period: 60s
    volumes:
      - database_data:/var/lib/postgresql/data:rw
      # You may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
      # - ./docker/db/data:/var/lib/postgresql/data:rw
###< doctrine/doctrine-bundle ###

volumes:
  redis_data:

###> doctrine/doctrine-bundle ###
  database_data:
###< doctrine/doctrine-bundle ###
